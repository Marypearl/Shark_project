apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: default
  labels:
    app: nodejs-app
data:
  MONGO_HOSTNAME: "mongo-service"
  MONGO_PORT: "27017"

---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  namespace: default
  labels:
    app: nodejs-app
type: Opaque
data:
  MONGO_USERNAME: bGFkeW1hcmc=
  MONGO_PASSWORD: cGFzc3dvcmQ=
  MONGO_DB: c2hhcmtpbmZv

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs
  namespace: default
  labels:
    app: nodejs-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
        - name: nodejs
          image: marypearl/nodejs:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_USERNAME
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_PASSWORD
            - name: MONGO_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: MONGO_HOSTNAME
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: MONGO_PORT
            - name: MONGO_DB
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_DB
          volumeMounts:
            - name: app-volume
              mountPath: /home/node/app
            - name: node-modules
              mountPath: /home/node/app/node_modules
          command: ["/home/node/app/wait-for.sh", "mongo-service:27017", "--", "node", "app.js"]

      volumes:
        - name: app-volume
          emptyDir: {}
        - name: node-modules
          emptyDir: {}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-service
  namespace: default
spec:
  selector:
    app: nodejs-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:4.1.8-xenial
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_PASSWORD
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: default
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP

---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mongo-pvc
#   namespace: default
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
